# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: .NET Desktop

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        targetplatform: [x64]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: OKEGui\OKEGui.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1

    - uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.x'
    - run: nuget restore $env:Solution_Name

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Build the Application project
    - name: Build the Application Project
      run: msbuild $env:Solution_Name /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle
      env:
        AppxBundle: Never
        BuildMode: SideloadOnly
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}

#    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
#    - name: Upload build artifacts
#      uses: actions/upload-artifact@v2
#      with:
#        name: MSIX Package
#        path: ${{ env.Wap_Project_Directory }}\AppPackages
